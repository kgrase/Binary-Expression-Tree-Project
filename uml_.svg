<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="603px" preserveAspectRatio="none" style="width:822px;height:603px;background:#FFFFFF;" version="1.1" viewBox="0 0 822 603" width="822px" zoomAndPan="magnify"><defs/><g><!--class nodeType--><g id="elem_nodeType"><rect codeLine="7" fill="#F1F1F1" height="96.8906" id="nodeType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="242.8701" x="51" y="475.5"/><ellipse cx="138.4956" cy="491.5" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M137.98,492.0625 Q136.1206,491.3594 135.4644,490.5938 Q134.8237,489.8125 134.8237,488.5 Q134.8237,486.8125 135.9019,485.8438 Q136.98,484.875 138.855,484.875 Q139.7144,484.875 140.5581,485.0781 Q141.4175,485.2656 142.2612,485.6563 L142.2612,488.0469 Q141.48,487.4844 140.6519,487.2031 Q139.8394,486.9063 139.0425,486.9063 Q138.1675,486.9063 137.6831,487.2656 Q137.2144,487.625 137.2144,488.2813 Q137.2144,488.7969 137.5581,489.1406 Q137.9019,489.4688 138.9956,489.875 L140.0581,490.2813 Q141.5425,490.8281 142.2456,491.7344 Q142.9644,492.6406 142.9644,494.0156 Q142.9644,495.8906 141.855,496.8125 Q140.7456,497.7344 138.4956,497.7344 Q137.5737,497.7344 136.6519,497.5156 Q135.73,497.2969 134.8706,496.875 L134.8706,494.3438 Q135.8394,495.0313 136.7612,495.375 Q137.6831,495.7188 138.5737,495.7188 Q139.48,495.7188 139.98,495.3125 Q140.48,494.8906 140.48,494.1563 Q140.48,493.5938 140.1362,493.1875 Q139.8081,492.7656 139.1831,492.5156 L137.98,492.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="59.3789" x="158.9956" y="495.6543">nodeType</text><line style="stroke:#181818;stroke-width:0.5;" x1="52" x2="292.8701" y1="507.5" y2="507.5"/><ellipse cx="62" cy="521.1484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108.9648" x="71" y="524.4951">info : elemType</text><ellipse cx="62" cy="537.4453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215.0039" x="71" y="540.792">lLink : nodeType&lt;elemType&gt;*</text><ellipse cx="62" cy="553.7422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216.8701" x="71" y="557.0889">rLink : nodeType&lt;elemType&gt;*</text><line style="stroke:#181818;stroke-width:0.5;" x1="52" x2="292.8701" y1="564.3906" y2="564.3906"/></g><!--class binaryTreeType--><g id="elem_binaryTreeType"><rect codeLine="13" fill="#F1F1F1" height="363.5781" id="binaryTreeType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="730.5254" x="7" y="10"/><ellipse cx="289.1992" cy="28.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M292.168,34.6094 Q291.5898,34.9063 290.9492,35.0469 Q290.3086,35.2031 289.6055,35.2031 Q287.1055,35.2031 285.7773,33.5625 Q284.4648,31.9063 284.4648,28.7813 Q284.4648,25.6563 285.7773,24 Q287.1055,22.3438 289.6055,22.3438 Q290.3086,22.3438 290.9492,22.5 Q291.6055,22.6563 292.168,22.9531 L292.168,25.6719 Q291.543,25.0938 290.9492,24.8281 Q290.3555,24.5469 289.7305,24.5469 Q288.3867,24.5469 287.6992,25.625 Q287.0117,26.6875 287.0117,28.7813 Q287.0117,30.875 287.6992,31.9531 Q288.3867,33.0156 289.7305,33.0156 Q290.3555,33.0156 290.9492,32.75 Q291.543,32.4688 292.168,31.8906 L292.168,34.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="64.3301" x="324.7373" y="26.1387">&#171;abstract&#187;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="94.4063" x="309.6992" y="40.1074">binaryTreeType</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="61.2207" x="679.3047" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="59.2207" x="680.3047" y="19.1387">elemType</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="736.5254" y1="47.9375" y2="47.9375"/><ellipse cx="18" cy="61.5859" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210.8203" x="27" y="64.9326">root : nodeType&lt;elemType&gt;*</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="736.5254" y1="72.2344" y2="72.2344"/><ellipse cx="18" cy="85.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="527.4404" x="27" y="89.2295">operator=(otherTree : binaryTreeType&lt;T&gt;&amp;) : const binaryTreeType&lt;T&gt;&amp;</text><ellipse cx="18" cy="102.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110.7764" x="27" y="105.5264">isEmpty() : bool</text><ellipse cx="18" cy="118.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169.8115" x="27" y="121.8232">inorderTraversal() : void</text><ellipse cx="18" cy="134.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180.3047" x="27" y="138.1201">preorderTraversal() : void</text><ellipse cx="18" cy="151.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187.2842" x="27" y="154.417">postorderTraversal() : void</text><ellipse cx="18" cy="167.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117.5439" x="27" y="170.7139">treeHeight() : int</text><ellipse cx="18" cy="183.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149.3789" x="27" y="187.0107">treeNodeCount() : int</text><ellipse cx="18" cy="199.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162.0254" x="27" y="203.3076">treeLeavesCount() : int</text><ellipse cx="18" cy="216.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138.5918" x="27" y="219.6045">destroyTree() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="229.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="704.5254" x="27" y="235.9014">copyTree(copiedTreeRoot : nodeType&lt;elemType&gt;*, otherTreeRoot : nodeType&lt;elemType&gt;*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="245.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298.3887" x="27" y="252.1982">destroy(p : nodeType&lt;elemType&gt;*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="262.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295.8389" x="27" y="268.4951">inorder(p : nodeType&lt;elemType&gt;*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="278.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306.332" x="27" y="284.792">preorder(p : nodeType&lt;elemType&gt;*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="294.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313.3115" x="27" y="301.0889">postorder(p : nodeType&lt;elemType&gt;*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="311.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278.749" x="27" y="317.3857">height(p : nodeType&lt;elemType&gt;*) : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="327.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162.5039" x="27" y="333.6826">max(x : int, y : int) : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="343.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310.6387" x="27" y="349.9795">nodeCount(p : nodeType&lt;elemType&gt;*) : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="359.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320.9746" x="27" y="366.2764">leavesCount(p : nodeType&lt;elemType&gt;*) : int</text></g><!--class binaryExpressionTree--><g id="elem_binaryExpressionTree"><rect codeLine="35" fill="#F1F1F1" height="145.7813" id="binaryExpressionTree" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="486.5986" x="329" y="451"/><ellipse cx="502.8608" cy="467" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M505.8296,472.6406 Q505.2515,472.9375 504.6108,473.0781 Q503.9702,473.2344 503.2671,473.2344 Q500.7671,473.2344 499.439,471.5938 Q498.1265,469.9375 498.1265,466.8125 Q498.1265,463.6875 499.439,462.0313 Q500.7671,460.375 503.2671,460.375 Q503.9702,460.375 504.6108,460.5313 Q505.2671,460.6875 505.8296,460.9844 L505.8296,463.7031 Q505.2046,463.125 504.6108,462.8594 Q504.0171,462.5781 503.3921,462.5781 Q502.0483,462.5781 501.3608,463.6563 Q500.6733,464.7188 500.6733,466.8125 Q500.6733,468.9063 501.3608,469.9844 Q502.0483,471.0469 503.3921,471.0469 Q504.0171,471.0469 504.6108,470.7813 Q505.2046,470.5 505.8296,469.9219 L505.8296,472.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="130.377" x="523.3608" y="471.1543">binaryExpressionTree</text><line style="stroke:#181818;stroke-width:0.5;" x1="330" x2="814.5986" y1="483" y2="483"/><line style="stroke:#181818;stroke-width:0.5;" x1="330" x2="814.5986" y1="491" y2="491"/><ellipse cx="340" cy="504.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318.1377" x="349" y="507.9951">search(searchItem : const std::string&amp;) : bool</text><ellipse cx="340" cy="520.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304.0625" x="349" y="524.292">insert(insertItem : const std::string&amp;) : void</text><ellipse cx="340" cy="537.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348.9814" x="349" y="540.5889">deleteNode(deleteItem : const std::string&amp;) : void</text><ellipse cx="340" cy="553.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="458.2676" x="349" y="556.8857">buildExpressionTree(postfixExpression : const std::string&amp;) : void</text><ellipse cx="340" cy="569.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241.0146" x="349" y="573.1826">evaluateExpressionTree() : double</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="337" y="583.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460.5986" x="349" y="589.4795">evaluateExpressionTree(node : nodeType&lt;std::string&gt;*) : double</text></g><!--reverse link binaryTreeType to binaryExpressionTree--><g id="link_binaryTreeType_binaryExpressionTree"><path codeLine="44" d="M491.7793,389.8036 C508.2093,416.9136 514.94,428.03 528.85,450.98 " fill="none" id="binaryTreeType-backto-binaryExpressionTree" style="stroke:#696969;stroke-width:1.0;"/><polygon fill="none" points="482.45,374.41,486.6481,392.9134,496.9105,386.6939,482.45,374.41" style="stroke:#696969;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="48.915" x="508.5" y="417.0669">inherits</text></g><!--reverse link binaryTreeType to nodeType--><g id="link_binaryTreeType_nodeType"><path codeLine="45" d="M256.3304,384.6724 C233.7304,421.9624 218.04,447.87 201.48,475.18 " fill="none" id="binaryTreeType-backto-nodeType" style="stroke:#696969;stroke-width:1.0;"/><polygon fill="#696969" points="262.55,374.41,256.0194,377.468,256.3304,384.6724,262.861,381.6144,262.55,374.41" style="stroke:#696969;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29.7832" x="244.5" y="417.0669">uses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="250.1134" y="393.9061">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="6.5" x="199.1777" y="464.3439">*</text></g><!--SRC=[dLJRRjim37ttLn1vABoiGTSz1cc0ekks0iK6RFa1sMOQhR9aY7GMx_Bletn94-TIOtcnmdDuI1rAecTj2-LL3hVUkvztpZWF7tJ-oQigeYrej4Mk2eJ2cIhysS5IeuXkcRrEIiQ7rDdl-XV2Eu2hAv4YbHW4NY5ak5IbOLXhqeascYj8IcEG2PPILNKIr1V_Mg1Nh9tzVt7NIHo8VtIMQythzq7pDljH4akEPQ0Grakmc2AHybKK4VioPR0kmqNmutS4ydiBsYuTJ04DvY7UHisZjiyIxkYp3f-FMuO_m_WRHNM7a6WhnHSUUnIOpLGY7QcKv_DjAzuvFbkpySBvczY9Spxe2hzNP36_U2DHCLpSECIwRTDzNd0L1shYdDcwuNmMbDKQFIbJuskdinOlFBv2SCJd6IpDV4RzjE8QqPPtW2-ozpjNscFO8ueY7KCp52zTlStzQXEneMZYij2OXUMtapPVmjRNqwHUWRPsN0nYj_uEP7Tk3wLttW_ahvefd25t5ayWLvjuqqGkeMeM-mox7TqWGRCppLSIUjVfVYE-4CcJK5-0xlOGAf-kukRpm9XlBm5nDftAbBHzkZWuxuIUu-PpDcdd16VI8jT7DMwMGnEJKfjil_qu36sfDo_H8KAuLgPKZ3sjmCfSAIzhQ_89Nl1wr_ATIethhOWOl_-0mEpFP79y365KSdSqKpzdT3s2iQIDngENvtSA9I7z0m00]--></g></svg>